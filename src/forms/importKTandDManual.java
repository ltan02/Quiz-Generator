/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forms;

import javax.swing.table.DefaultTableModel;
import javax.swing.JOptionPane;

/**
 *
 * @author lance_tan
 */
public class importKTandDManual extends javax.swing.JFrame {

        /**
         * Creates new form importKTandDManual
         */
        MainMenu myMainMenu;
        
        int rowIndex;
        
        public importKTandDManual(MainMenu someMain) {
                initComponents();  
                
                myMainMenu = someMain;
        }

        /**
         * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code.
         * The content of this method is always regenerated by the Form Editor.
         */
        @SuppressWarnings("unchecked")
        // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
        private void initComponents() {

                lblTitle = new javax.swing.JLabel();
                lblStep = new javax.swing.JLabel();
                jScrollPane1 = new javax.swing.JScrollPane();
                tblKTandD = new javax.swing.JTable();
                btnBack = new javax.swing.JButton();
                btnNext = new javax.swing.JButton();
                txtD = new javax.swing.JTextField();
                btnAdd = new javax.swing.JButton();
                btnRemove = new javax.swing.JButton();
                lblKT = new javax.swing.JLabel();
                lblD = new javax.swing.JLabel();
                txtKT = new javax.swing.JTextField();
                btnUpdate = new javax.swing.JButton();
                lblError = new javax.swing.JLabel();

                setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
                setMaximumSize(new java.awt.Dimension(400, 300));
                setMinimumSize(new java.awt.Dimension(400, 300));
                getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

                lblTitle.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
                lblTitle.setText("Creating New Quiz");
                getContentPane().add(lblTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 20, -1, -1));

                lblStep.setText("Step 4: Importing Key Terms and/or Definitions");
                getContentPane().add(lblStep, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 50, -1, -1));

                tblKTandD.setModel(new javax.swing.table.DefaultTableModel(
                        new Object [][] {

                        },
                        new String [] {
                                "Key Term", "Definition"
                        }
                ));
                tblKTandD.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mousePressed(java.awt.event.MouseEvent evt) {
                                tblKTandDMousePressed(evt);
                        }
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                tblKTandDMouseClicked(evt);
                        }
                });
                jScrollPane1.setViewportView(tblKTandD);

                getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 180, 140));

                btnBack.setText("Back");
                btnBack.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                btnBackActionPerformed(evt);
                        }
                });
                getContentPane().add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 250, -1, -1));

                btnNext.setText("Next");
                btnNext.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                btnNextActionPerformed(evt);
                        }
                });
                getContentPane().add(btnNext, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 250, -1, -1));
                getContentPane().add(txtD, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 140, 160, -1));

                btnAdd.setText("Add");
                btnAdd.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                btnAddActionPerformed(evt);
                        }
                });
                getContentPane().add(btnAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 180, -1, -1));

                btnRemove.setText("Remove");
                btnRemove.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                btnRemoveActionPerformed(evt);
                        }
                });
                getContentPane().add(btnRemove, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 210, -1, -1));

                lblKT.setFont(new java.awt.Font("Lucida Grande", 0, 10)); // NOI18N
                lblKT.setText("Key Term");
                getContentPane().add(lblKT, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 80, -1, -1));

                lblD.setFont(new java.awt.Font("Lucida Grande", 0, 10)); // NOI18N
                lblD.setText("Definition");
                getContentPane().add(lblD, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 130, -1, -1));
                getContentPane().add(txtKT, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 90, 160, -1));

                btnUpdate.setText("Update");
                btnUpdate.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                btnUpdateActionPerformed(evt);
                        }
                });
                getContentPane().add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 180, -1, -1));

                lblError.setFont(new java.awt.Font("Lucida Grande", 0, 12)); // NOI18N
                lblError.setForeground(new java.awt.Color(255, 0, 0));
                getContentPane().add(lblError, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, -1, -1));

                pack();
        }// </editor-fold>//GEN-END:initComponents

        private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
                // TODO add your handling code here:
                DefaultTableModel model = (DefaultTableModel) this.tblKTandD.getModel();
                
                if(this.txtKT.getText().isEmpty() && this.txtD.getText().isEmpty()) {
                        JOptionPane.showMessageDialog(this, "Please don't leave the Key Term and Definition text box blank");
                } else if(this.txtKT.getText().isEmpty()) {
                        JOptionPane.showMessageDialog(this, "Please don't leave the Key Term text box blank");
                } else if(this.txtD.getText().isEmpty()) {
                        JOptionPane.showMessageDialog(this, "Please don't leave the Definition text box blank");
                } else {
                        model.addRow(new Object[] {this.txtKT.getText(), this.txtD.getText()});
                }
              
                this.txtKT.setText("");
                this.txtD.setText("");
        }//GEN-LAST:event_btnAddActionPerformed

        private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
                DefaultTableModel model = (DefaultTableModel) this.tblKTandD.getModel();
                
                model.removeRow(this.tblKTandD.getSelectedRow());
                
                this.txtKT.setText("");
                this.txtD.setText("");
        }//GEN-LAST:event_btnRemoveActionPerformed

        private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
                // TODO add your handling code here:
                myMainMenu.navigate(this, "importFormat");
        }//GEN-LAST:event_btnBackActionPerformed

        private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
                // TODO add your handling code here:
                myMainMenu.previousFrame = "importKTandDManual";
                myMainMenu.navigate(this, "formatForm");
                addData();
        }//GEN-LAST:event_btnNextActionPerformed

        private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
                // TODO add your handling code here:
                this.lblError.setText("");
                DefaultTableModel model = (DefaultTableModel) this.tblKTandD.getModel();
                if(this.tblKTandD.getSelectedRow() == -1) {
                        if(this.tblKTandD.getRowCount() == 0) {
                                this.lblError.setText("Table is empty");
                        } else {
                                this.lblError.setText("You must select a product");
                        } 
                } else {
                        model.setValueAt(this.txtKT.getText(), this.tblKTandD.getSelectedRow(), 0);
                        model.setValueAt(this.txtD.getText(), this.tblKTandD.getSelectedRow(), 1);
                        
                        this.lblKT.setText("");
                        this.lblD.setText("");
                }
        }//GEN-LAST:event_btnUpdateActionPerformed

        private void tblKTandDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblKTandDMouseClicked
                // TODO add your handling code here:
        }//GEN-LAST:event_tblKTandDMouseClicked

        private void tblKTandDMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblKTandDMousePressed
                // TODO add your handling code here:
                this.txtKT.setText(this.tblKTandD.getValueAt(this.tblKTandD.getSelectedRow(), 0).toString());
                this.txtD.setText(this.tblKTandD.getValueAt(this.tblKTandD.getSelectedRow(), 1).toString());
        }//GEN-LAST:event_tblKTandDMousePressed

        public void addData() {
                int rows = tblKTandD.getRowCount();
                String[][] data = new String[rows][2];
                
                for(int i = 0; i < rows; i++) {
                        for(int j = 0; j < 2; j++) {
                                data[i][j] = (String) tblKTandD.getModel().getValueAt(i, j);
                        }
                }
                
                for(int k = 0; k < rows; k++) {
                        String definition = data[k][1];
                        String answer = data[k][0];
                        
                        int[] randomInts = new int[3];
                        randomInts = randomIntGenerator(randomInts, rows-1, 0, k);
                        
                        String wrongAnswer1 = data[randomInts[0]][0];
                        String wrongAnswer2 = data[randomInts[1]][0];
                        String wrongAnswer3 = data[randomInts[2]][0];
                        int primaryKey = myMainMenu.mySQLMain.addItem("tblQuestion", "Definition", "Answer", "WrongAnswer1", "WrongAnswer2", "WrongAnswer3", "TopicID", definition, answer, wrongAnswer1, wrongAnswer2, wrongAnswer3, myMainMenu.currentTopicID);
                        
                        myMainMenu.mySQLMain.addItem("tblQuizQuestion", "QuizID", "QuestionID", myMainMenu.currentQuizID, primaryKey);
                }
                        
                
        }
        
        public int[] randomIntGenerator(int[] array, int max, int min, int currentCorrect) {
                for(int i = 0; i < array.length; i++) { 
                        int random = (int) (Math.random() * ((max - min) + 1)) + min;
                        while(random == currentCorrect || inArray(array, random)) {
                                random = (int) (Math.random() * ((max - min) + 1)) + min;
                        }
                        array[i] = random;
                }
                return array;
        }
        
        public boolean inArray(int[] array, int random) {
                boolean flag = false;
                for(int i = 0; i < array.length; i++) {
                        if(array[i] == random) {
                                flag = true;
                        }
                }
                return flag;
        }

        // Variables declaration - do not modify//GEN-BEGIN:variables
        private javax.swing.JButton btnAdd;
        private javax.swing.JButton btnBack;
        private javax.swing.JButton btnNext;
        private javax.swing.JButton btnRemove;
        private javax.swing.JButton btnUpdate;
        private javax.swing.JScrollPane jScrollPane1;
        private javax.swing.JLabel lblD;
        private javax.swing.JLabel lblError;
        private javax.swing.JLabel lblKT;
        private javax.swing.JLabel lblStep;
        private javax.swing.JLabel lblTitle;
        private javax.swing.JTable tblKTandD;
        private javax.swing.JTextField txtD;
        private javax.swing.JTextField txtKT;
        // End of variables declaration//GEN-END:variables
}
