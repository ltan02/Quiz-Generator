/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forms;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileSystemView;
import javax.swing.table.DefaultTableModel;
import java.math.*;

/**
 *
 * @author lance_tan
 */
public class importKTandDAuto extends javax.swing.JFrame {

        /**
         * Creates new form importKTandDAuto
         */
        
        MainMenu myMainMenu;
        
        public importKTandDAuto(MainMenu someMain) {
                initComponents();
                
                myMainMenu = someMain;
        }

        /**
         * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code.
         * The content of this method is always regenerated by the Form Editor.
         */
        @SuppressWarnings("unchecked")
        // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
        private void initComponents() {

                lblTitle = new javax.swing.JLabel();
                lblStep = new javax.swing.JLabel();
                jScrollPane1 = new javax.swing.JScrollPane();
                tblKTandD = new javax.swing.JTable();
                btnImport = new javax.swing.JButton();
                btnNext = new javax.swing.JButton();
                btnBack = new javax.swing.JButton();
                btnClear = new javax.swing.JButton();

                setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
                setResizable(false);
                getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

                lblTitle.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
                lblTitle.setText("Creating New Quiz");
                getContentPane().add(lblTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 20, -1, -1));

                lblStep.setText("Step 4: Importing Key Terms and/or Definitions");
                getContentPane().add(lblStep, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 50, -1, -1));

                tblKTandD.setModel(new javax.swing.table.DefaultTableModel(
                        new Object [][] {

                        },
                        new String [] {
                                "Key Term", "Definition"
                        }
                ));
                jScrollPane1.setViewportView(tblKTandD);

                getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 360, 150));

                btnImport.setText("import .txt file");
                btnImport.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                btnImportActionPerformed(evt);
                        }
                });
                getContentPane().add(btnImport, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 260, -1, -1));

                btnNext.setText("Next");
                btnNext.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                btnNextActionPerformed(evt);
                        }
                });
                getContentPane().add(btnNext, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 260, -1, -1));

                btnBack.setText("Back");
                btnBack.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                btnBackActionPerformed(evt);
                        }
                });
                getContentPane().add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 260, -1, -1));

                btnClear.setText("Clear");
                btnClear.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                btnClearActionPerformed(evt);
                        }
                });
                getContentPane().add(btnClear, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 230, -1, -1));

                pack();
        }// </editor-fold>//GEN-END:initComponents

        private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
                // TODO add your handling code here:
                myMainMenu.navigate(this, "importFormat"); //Switching frames
        }//GEN-LAST:event_btnBackActionPerformed

        private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
                // TODO add your handling code here:
                myMainMenu.previousFrame = "importKTandDAuto";
                myMainMenu.navigate(this, "formatForm"); //Switching frames
                addData();
        }//GEN-LAST:event_btnNextActionPerformed

        private void btnImportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImportActionPerformed
                // TODO add your handling code here:
                //Creates a new JFileChoose object
                JFileChooser jfc = new JFileChooser(FileSystemView.getFileSystemView().getHomeDirectory()); 
		//Opens up a file directory for the user to look for their file
		int returnValue = jfc.showOpenDialog(null);
                //Checks weather the returnValue was chosen
		if (returnValue == JFileChooser.APPROVE_OPTION) {
			File selectedFile = jfc.getSelectedFile();
                        //Stores the path of the file that was chosen  
			String path = selectedFile.getAbsolutePath();
                        //Instantiates a file object with the path of the chosen file
                        File file = new File(path);   
                        try {
                                //Instantiates a new bufferedReader object, which has the fileReader of the current file
                                BufferedReader br = new BufferedReader(new FileReader(file));
                                //Creates the object for putting the data into the table
                                DefaultTableModel model = (DefaultTableModel)tblKTandD.getModel();
                                //Converts all the lines into an array and stores it in tableLines
                                Object[] tableLines = br.lines().toArray();
                                //Loops through the size of the tableLines array
                                for(int i = 0; i < tableLines.length; i++) {
                                        //Converts each line into a string and removes the whitespaces from the start and end
                                        String line = tableLines[i].toString().trim();
                                        //Splits each line by the colon (to split the key term from the definition)
                                        String[] dataRow = line.split(": ");
                                        model.addRow(dataRow); //Adds each data as a new line on the table
                                }
                        } catch (Exception e) {
                                System.out.println("Error 1: " + e);
                        }
		}
        }//GEN-LAST:event_btnImportActionPerformed

        private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
                // TODO add your handling code here:
                DefaultTableModel model = (DefaultTableModel) tblKTandD.getModel(); //Creates a new empty table
                model.setRowCount(0);
        }//GEN-LAST:event_btnClearActionPerformed

        public void addData() {
                int rows = tblKTandD.getRowCount();
                String[][] data = new String[rows][2];
                
                for(int i = 0; i < rows; i++) {
                        for(int j = 0; j < 2; j++) {
                                data[i][j] = (String) tblKTandD.getModel().getValueAt(i, j);
                        }
                }
                
                for(int k = 0; k < rows; k++) {
                        String definition = data[k][1];
                        String answer = data[k][0];
                        
                        int[] randomInts = new int[3];
                        randomInts = randomIntGenerator(randomInts, rows-1, 0, k);
                        
                        String wrongAnswer1 = data[randomInts[0]][0];
                        String wrongAnswer2 = data[randomInts[1]][0];
                        String wrongAnswer3 = data[randomInts[2]][0];
                        int primaryKey = myMainMenu.mySQLMain.addItem("tblQuestion", "Definition", "Answer", "WrongAnswer1", "WrongAnswer2", "WrongAnswer3", "TopicID", definition, answer, wrongAnswer1, wrongAnswer2, wrongAnswer3, myMainMenu.currentTopicID);
                        
                        myMainMenu.mySQLMain.addItem("tblQuizQuestion", "QuizID", "QuestionID", myMainMenu.currentQuizID, primaryKey);
                }
                        
                
        }
        
        public int[] randomIntGenerator(int[] array, int max, int min, int currentCorrect) {
                for(int i = 0; i < array.length; i++) { 
                        int random = (int) (Math.random() * ((max - min) + 1)) + min;
                        while(random == currentCorrect || inArray(array, random)) {
                                random = (int) (Math.random() * ((max - min) + 1)) + min;
                        }
                        array[i] = random;
                }
                return array;
        }
        
        public boolean inArray(int[] array, int random) {
                boolean flag = false;
                for(int i = 0; i < array.length; i++) {
                        if(array[i] == random) {
                                flag = true;
                        }
                }
                return flag;
        }
        
        // Variables declaration - do not modify//GEN-BEGIN:variables
        private javax.swing.JButton btnBack;
        private javax.swing.JButton btnClear;
        private javax.swing.JButton btnImport;
        private javax.swing.JButton btnNext;
        private javax.swing.JScrollPane jScrollPane1;
        private javax.swing.JLabel lblStep;
        private javax.swing.JLabel lblTitle;
        private javax.swing.JTable tblKTandD;
        // End of variables declaration//GEN-END:variables
}
